plugins {
    id 'java'
    id 'idea'
    id "com.palantir.docker" version "0.19.2"
    id 'com.palantir.docker-run' version '0.19.2'
    id 'org.springframework.boot' version '2.0.3.RELEASE'
    id "io.spring.dependency-management" version "1.0.4.RELEASE"
    id 'at.comm_unity.gradle.plugins.jpamodelgen' version '1.1.4'
    id "io.franzbecker.gradle-lombok" version "1.11"
    id "org.hibernate.gradle.tools" version "1.2.5"
}

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile 'org.springframework.boot:spring-boot-starter-tomcat'
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile 'org.springframework.boot:spring-boot-starter-websocket'
    compile 'org.springframework.boot:spring-boot-starter-security'
    compile 'org.springframework.boot:spring-boot-starter-activemq'
    compile 'org.springframework.boot:spring-boot-starter-logging'
    compile 'org.springframework.boot:spring-boot-configuration-processor'
    compile 'org.springframework.boot:spring-boot-devtools'

    compile 'io.springfox:springfox-swagger2:2.9.2'
    compile 'io.springfox:springfox-swagger-ui:2.9.2'

    compile 'org.hibernate:hibernate-core:5.2.12.Final'
    compile 'org.hibernate:hibernate-entitymanager:5.2.12.Final'

    compile 'javax.interceptor:javax.interceptor-api:1.2.2'
    compile 'com.google.code.gson:gson:2.8.2'
    compile 'com.google.http-client:google-http-client:1.23.0'
    compile 'org.jsoup:jsoup:1.10.3'

    compile 'org.webjars:webjars-locator:0.33'
    compile 'org.webjars:sockjs-client:1.0.2'
    compile 'org.webjars:stomp-websocket:2.3.3'
    compile 'org.webjars:bootstrap:3.3.7'
    compile 'org.webjars:jquery:3.1.0'

    runtime 'org.postgresql:postgresql'
    runtime 'org.springframework.boot:spring-boot-properties-migrator'

    testCompile 'org.springframework.boot:spring-boot-starter-test'
	testCompile 'junit:junit:4.12'
}

bootJar {
    classifier = 'boot'
}

docker {
    name bootJar.baseName
    files bootJar.archivePath
    buildArgs(['JAR_FILE': bootJar.archiveName])
}

sourceSets {
    main.java.srcDir 'src/main/generated'
}

idea {
    module.generatedSourceDirs += file('src/main/generated')
}

jpaModelgen {
    library = "org.hibernate:hibernate-jpamodelgen:5.2.12.Final"
    jpaModelgenSourcesDir = "src/main/generated"
}